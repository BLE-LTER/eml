<!--
      '$RCSfile: eml-attribute.dtd,v $'
        Purpose: This dtd mimics the content model found in 
                 eml-attribute.xsd.
      Copyright: 2000 Regents of the University of California and the
                 National Center for Ecological Analysis and Synthesis
        Authors: Matt Jones, Zheng Wang, and Noah Goldstein

     '$Author: bojilova $'
     '$Date: 2001-02-10 00:59:08 $'
     '$Revision: 1.1 $'
  
-->
<!-- This a EML DTD document that defines the
     characteristics of all attributes in a dataset. -->

<!-- The root element, which represents a list of attributes in a dataset -->
<!ELEMENT eml-attribute (identifier, attribute*)>

<!-- File identifier of the metadata document -->
<!ELEMENT identifier (#PCDATA)>

<!-- Attribute element is a descriptor of an attribute in the dataset
     identified by its name. -->
<!ELEMENT attribute (attributeName, attributeDefinition, unit?, storageType?,
                    codeDefinition* , numericRange* , missingValueCode*,
                    precision?, fieldFormat?)>
<!-- Attribute name -->
<!ELEMENT attributeName (#PCDATA) >

<!-- Precise definition of variables in data set -->
<!ELEMENT attributeDefinition (#PCDATA)>

<!-- Unit -->
<!ELEMENT unit (#PCDATA) >

<!-- Storage type; Integer, floating point, character, string -->
<!ELEMENT storageType (#PCDATA) >

<!-- Description of any codes associated with variables -->
<!ELEMENT codeDefinition (code, definition) >
<!ELEMENT code (#PCDATA) >
<!-- List and definition of variable codes -->
<!ELEMENT definition (#PCDATA) >

<!-- Range for numeric values -->
<!ELEMENT numericRange  (minimum?,maximum?) >
<!ELEMENT minimum (#PCDATA) >
<!ELEMENT maximum (#PCDATA) >

<!-- Character used to represent missing data -->
<!ELEMENT missingValueCode  (#PCDATA) >

<!-- Precision; number of significant digits -->
<!ELEMENT precision   (#PCDATA) >

<!-- Data format -->
<!ELEMENT fieldFormat (attributeWidth|fieldWidth)>

<!--
Data sets are generally classified as fixed_width format or
attribute_width format, but we have determined that this is actually a
per-field classification because one may encounter fixedWidth fields
mixed together in the same data file with attribute_width fields.

In our encoding scheme, the start of each field is assumed to be the
column after the last column of the previous field, or the first column
if this is the first field in the dataset.  The end column for each
field is classified using a field_format and some information specific to
each field_format type that indicates in which column the field ends. The
two types of field formats are attribute_width and fixed_width. 
attributeWidth fields can vary in their field length, and the end of the
field is delimited by a special character called a field delimiter,
usually a comma or a tab character.  Fixed_width fields have a set
length, and so the end of the field can always be determined by adding
the fieldWidth to the starting column number.  Here is an example:

Assume we have the following data in a data set:

May,100aaa,1.2,
April,200aaa,3.4,
June,300bbb,4.6,

The metadata for the 4 fields would include the following:
<attribute><name>month</name>
<fieldFormat><attribute_width><delimiter>,</delimiter>
</attribute_width></fieldFormat></attribute>

<attribute><name>sitecode</name>
<fieldFormat><fixedWidth><field_width>3</fieldWidth>
</fixedWidth></fieldFormat></attribute>

<attribute><name>subsitecode</name>
<fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
</fixedWidth></fieldFormat></attribute>

<attribute><name>response</name>
<fieldFormat><attributeWidth><delimiter>,</delimiter>
</attributeWidth></fieldFormat></attribute>

-->

<!-- Variable width field -->
<!ELEMENT attributeWidth (delimiter+)>
<!-- Character used to delimit end of field -->
<!ELEMENT delimiter (#PCDATA)>
<!-- Width of field in characters -->
<!ELEMENT fieldWidth (#PCDATA)>

<!-- End of file -->

