<?xml version ="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2000/10/XMLSchema"
           targetNamespace="eml:attribute">

  <xs:annotation>
    <xs:documentation>
       '$RCSfile: eml-attribute.xsd,v $'
       Copyright: 2000 Regents of the University of California and the
                  National Center for Ecological Analysis and Synthesis
     For Details: http://knb.ecoinformatics.org/
  
        '$Author: bojilova $'
          '$Date: 2001-02-17 00:04:29 $'
      '$Revision: 1.5 $'
    
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
  
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
  
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    </xs:documentation>
    <xs:appInfo>
      <moduleName>
        eml-attribute
      </moduleName>
      <moduleDescription>
        The EML Attribute Module describes all attributes in a dataset.
      </moduleDescription>
    </xs:appInfo>
  </xs:annotation>

  <xs:element name="eml-attribute" minOccurs="1" maxOccurs="1">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Attribute descriptors
        </tooltip>
        <summary>
	  Container of attribute descriptors of all attributes in a dataset.
        </summary>
        <description>
           Eml-attribute element represents a list of all attributes in a dataset.
        </description>
        <example>
        </example>
        <lineage>
          The eml-attribute was introduced into EML 1.4 as eml-variable.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="identifier" type="xs:string"
                    minOccurs="1" maxOccurs="1">
          <xs:annotation>
            <xs:appInfo>
              <tooltip>
	        File identifier
              </tooltip>
              <summary>
	        File identifier of the metadata document.
              </summary>
              <description>
                File identifier of the metadata document.
              </description>
              <example>
                metacat://dev.nceas.ucsb.edu?docid=nceas.155
              </example>
              <lineage>
                The identifier was introduced into EML 1.4 as meta_file_id.
              </lineage>
            </xs:appInfo>
          </xs:annotation>
        </xs:element>
        <xs:element ref="attribute"
                    minOccurs="1" maxOccurs="unbounded">
          <xs:annotation>
            <xs:appInfo>
              <tooltip>
	        Attribute descriptor
              </tooltip>
              <summary>
	        Descriptor of an attribute in the dataset.
              </summary>
              <description>
                Attribute element is a descriptor of an attribute in the dataset
                identified by its name. The attribute element can contain information 
                about the attribute's definition, format, storage type and data range,
                or missing value.
              </description>
              <example>
              </example>
              <lineage>
                The attribute element was introduced into EML 1.4 as variable.
              </lineage>
            </xs:appInfo>
          </xs:annotation>
        </xs:element>
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="attribute">
    <xs:complexType>
      <xs:sequence>
        <xs:element ref="attributeName" type="xs:string"
                    minOccurs="1" maxOccurs="1"/>	
        <xs:element ref="attributeDefinition" type="xs:string"
                    minOccurs="1" maxOccurs="1"/>	
        <xs:element ref="unit" type="xs:string"
                    minOccurs="0" maxOccurs="1"/>	
        <xs:element ref="storageType" type="xs:string"
                    minOccurs="0" maxOccurs="1"/>
        <xs:element ref="codeDefinition"
                    minOccurs="0" maxOccurs="unbounded"/>	
        <xs:element ref="numericRange"
                    minOccurs="0" maxOccurs="unbounded"/>
        <xs:element ref="missingValueCode" type="xs:string"
                    minOccurs="0" maxOccurs="unbounded"/>	
        <xs:element ref="precision" type="xs:string"
                    minOccurs="0" maxOccurs="1"/>	
        <xs:element ref="fieldFormat"
                    minOccurs="0" maxOccurs="1"/>	
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="attributeName">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Attribute name
        </tooltip>
        <summary>
	  Attribute name for identification
        </summary>
        <description>
	  This element specifies name of the attribute(field) in the dataset.
        </description>
        <example>
        </example>
        <lineage>
          The attributeName was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="attributeDefinition">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Attribute definition
        </tooltip>
        <summary>
	  Precise definition of attribute in the dataset
        </summary>
        <description>
	  This element gives precise definition of attribute in the dataset.
        </description>
        <example>
        </example>
        <lineage>
          The attributeDefinition was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="unit">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Unit of measurement
        </tooltip>
        <summary>
	  Unit of measurement for data in the field
        </summary>
        <description>
	  This element specifies unit of measurement for data in the field.
        </description>
        <example>
        </example>
        <lineage>
          The unit was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="storageType">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Storage type
        </tooltip>
        <summary>
	  Description of storage type from data in the field
        </summary>
        <description>
	  This element describes the storage type for data in the field like:
          integer, floating point, character, string.
        </description>
        <example>
          integer, floating point, character, string
        </example>
        <lineage>
          The storageType was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="codeDefinition">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Code definition
        </tooltip>
        <summary>
	  Description of any codes associated with the attribute
        </summary>
        <description>
	  This element describes a code associated with the attribute.
        </description>
        <example>
        </example>
        <lineage>
          The codeDefinition was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="code" type="xs:string"
                    minOccurs="1" maxOccurs="1"/>	
        <xs:element name="definition" type="xs:string"
                    minOccurs="1" maxOccurs="1"/>	
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="numericRange">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Numeric range
        </tooltip>
        <summary>
	  Numeric range of attribute
        </summary>
        <description>
	  This element specifies the minimum and maximum value range
          of numeric attribute.
        </description>
        <example>
        </example>
        <lineage>
          The numericRange was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="minimum" type="xs:string"
                    minOccurs="0" maxOccurs="1"/>	
        <xs:element name="maximum" type="xs:string"
                    minOccurs="0" maxOccurs="1"/>	
      </xs:sequence>
    </xs:complexType>
  </xs:element>

  <xs:element name="missingValueCode">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Character for missing value
        </tooltip>
        <summary>
	  Character for missing value in the data of the field
        </summary>
        <description>
	  This element is to specify missing value in the data
          of the field.
        </description>
        <example>
        </example>
        <lineage>
          The missingValueCode was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="precision">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Precision
        </tooltip>
        <summary>
	  Number of significat digits after the floating point.
        </summary>
        <description>
	  If data of that field are of floating point storage type
          this element specifies the number of significat digits
          after the floating point.
        </description>
        <example>
          any integer number
        </example>
        <lineage>
          The precision element was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
  </xs:element>

  <xs:element name="fieldFormat">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Field format
        </tooltip>
        <summary>
	  Data format of the field(attribute) in the dataset
        </summary>
        <description>
          Data sets are generally classified as fixedWidth format or
          attributeWidth format, but we have determined that this is actually a
          per-field classification because one may encounter fixedWidth fields
          mixed together in the same data file with attributeWidth fields.

          In our encoding scheme, the start of each field is assumed to be the
          column after the last column of the previous field, or the first column
          if this is the first field in the dataset.  The end column for each
          field is classified using a fieldFormat and some information specific to
          each fieldFormat type that indicates in which column the field ends. The
          two types of field formats are attributeWidth and fixedWidth. 
          attributeWidth fields can vary in their field length, and the end of the
          field is delimited by a special character called a field delimiter,
          usually a comma or a tab character.  FixedWidth fields have a set
          length, and so the end of the field can always be determined by adding
          the fieldWidth to the starting column number.
        </description>
        <example>
          Assume we have the following data in a data set:

          May,100aaa,1.2,
          April,200aaa,3.4,
          June,300bbb,4.6,

          The metadata for the 4 fields would include the following:
          <![CDATA[
          <attribute><name>month</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>

          <attribute><name>sitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>subsitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>response</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>]]>

        </example>
        <lineage>
          The fieldFormat was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element ref="attributeWidth" />	
        <xs:element ref="fixedWidth" />	
      </xs:choice>
    </xs:complexType>
  </xs:element>

  <xs:element name="attributeWidth">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Attribute width
        </tooltip>
        <summary>
	  AttributeWidth specification for variable field length.
        </summary>
        <description>
          AttributeWidth fields can vary in their field length, and the end of the
          field is delimited by a special character called a field delimiter,
          usually a comma or a tab character.
        </description>
        <example>
          Assume we have the following data in a data set:

          May,100aaa,1.2,
          April,200aaa,3.4,
          June,300bbb,4.6,

          The metadata for the 4 fields would include the following:
          <![CDATA[
          <attribute><name>month</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>

          <attribute><name>sitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>subsitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>response</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>]]>

        </example>
        <lineage>
          The attributeWidth was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="delimiter" type="xs:string"
                    minOccurs="1" maxOccurs="unbounded"/>	
      </xs:sequence>
    </xs:complexType>
  </xs:element>
	
  <xs:element name="fixedWidth">
    <xs:annotation>
      <xs:appInfo>
        <tooltip>
	  Fixed width
        </tooltip>
        <summary>
	  FixedWidth specification for fixed field length.
        </summary>
        <description>
          FixedWidth fields have a set length, and so the end of
          the field can always be determined by adding
          the fieldWidth to the starting column number.
        </description>
        <example>
          Assume we have the following data in a data set:

          May,100aaa,1.2,
          April,200aaa,3.4,
          June,300bbb,4.6,

          The metadata for the 4 fields would include the following:
          <![CDATA[
          <attribute><name>month</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>

          <attribute><name>sitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>subsitecode</name>
          <fieldFormat><fixedWidth><fieldWidth>3</fieldWidth>
          </fixedWidth></fieldFormat></attribute>

          <attribute><name>response</name>
          <fieldFormat><attributeWidth><delimiter>,</delimiter>
          </attributeWidth></fieldFormat></attribute>]]>

        </example>
        <lineage>
          The fixedWidth was introduced into EML 1.4.
        </lineage>
      </xs:appInfo>
    </xs:annotation>
    <xs:complexType>
      <xs:sequence>
        <xs:element name="fieldWidth" type="xs:string"
                    minOccurs="1" maxOccurs="1"/>	
      </xs:sequence>
    </xs:complexType>
  </xs:element>

</xs:schema>
