<?xml version="1.0"?>
<xs:schema targetNamespace="eml:physical-2.0.0beta9" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:res="eml:resource-2.0.0beta9" xmlns:lit="eml:literature-2.0.0beta9" xmlns:doc="eml:documentation-2.0.0beta9" xmlns="eml:physical-2.0.0beta9">
  <xs:import namespace="eml:documentation-2.0.0beta9" schemaLocation="eml-documentation.xsd"/>
  <xs:import namespace="eml:literature-2.0.0beta9" schemaLocation="eml-literature.xsd"/>
  <xs:import namespace="eml:resource-2.0.0beta9" schemaLocation="eml-resource.xsd"/>
  <xs:annotation>
    <xs:documentation>
       '$RCSfile: eml-physical.xsd,v $'
       Copyright: 1997-2002 Regents of the University of California,
                            University of New Mexico, and
                            Arizona State University
        Sponsors: National Center for Ecological Analysis and Synthesis and
                  Partnership for Interdisciplinary Studies of Coastal Oceans,
                     University of California Santa Barbara
                  Long-Term Ecological Research Network Office,
                     University of New Mexico
                  Center for Environmental Studies, Arizona State University
   Other funding: National Science Foundation (see README for details)
                  The David and Lucile Packard Foundation
     For Details: http://knb.ecoinformatics.org/
        '$Author: berkley $'
          '$Date: 2002-06-14 16:34:13 $'
      '$Revision: 1.30 $'
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    </xs:documentation>
    <xs:appinfo>
      <doc:moduleDocs>
        <doc:moduleName>eml-physical</doc:moduleName>
        <doc:moduleDescription>
          The eml-physical Module defines the structural
          characteristics of data formats as delivered over the wire or
          as found in a file system.  One physical object (which can be a
          bytestream or an object in a file system) might contain multiple
          entities (for example, this would be typical in a MS Access file
          that contained multiple tables of data).  However, it is typically
          used to describe a file or stream that is in some text-based
          format such as ASCII or UTF-8, and includes the information needed
          to parse the data stream to extract the entity and its attributes
          from the stream.
        </doc:moduleDescription>
        <doc:recommendedUsage>All packages that contain data</doc:recommendedUsage>
        <doc:standAlone>yes</doc:standAlone>
      </doc:moduleDocs>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="physical" type="PhysicalType">
    <xs:annotation>
      <xs:appinfo>
        <doc:tooltip>Physical structure.        </doc:tooltip>
        <doc:summary>Physical structure of an entity or entities.</doc:summary>
        <doc:description>
          Physical structure of an entity or entities.  This generally is a detailed
          description of a text representation that shows how the columns and rows
          of a table are represented, or simply the name of a well-known binary or
          proprietary format (e.g., Microsoft Excel 2000).
        </doc:description>
        <doc:example/>
        <doc:lineage>
          The eml-physical was introduced into EML 1.4 as eml-file.
        </doc:lineage>
      </xs:appinfo>
    </xs:annotation>
  </xs:element>
  <xs:complexType name="PhysicalType">
    <xs:annotation>
      <xs:appinfo/>
    </xs:annotation>
    <xs:choice>
      <xs:sequence>
        <xs:element name="dataObject">
          <xs:annotation>
            <xs:appinfo>
              <doc:tooltip/>
              <doc:summary/>
              <doc:description>
              The dataObject element is a container for several items
              which identify the physical object described by this metadata
              document
             </doc:description>
              <doc:example/>
              <doc:lineage>
               Introduced in EML 2.0.
             </doc:lineage>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:annotation>
                <xs:appinfo>
                  <doc:tooltip>
                    Object name
                  </doc:tooltip>
                  <doc:summary>
                    A name for the physical object.
                  </doc:summary>
                  <doc:description>
                    The objectName is the a name (i.e. identifier) for the object
                    being considered. In many cases, it may just be the file name
                    on the file system where it is stored. Or if the object is a
                    table in a RDB it may be the table name.
                  </doc:description>
                  <doc:example/>
                  <doc:lineage>
                    Introduced in EML 2.0.
                  </doc:lineage>
                </xs:appinfo>
              </xs:annotation>
              <xs:element name="objectName" type="xs:string"/>
              <xs:element name="size" minOccurs="0">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                    Entity size
                  </doc:tooltip>
                    <doc:summary>
                    Describes the physical size of the entity.
                  </doc:summary>
                    <doc:description>
                    This element contains information of the physical size
                    of the entity, typically in bytes.
                  </doc:description>
                    <doc:example><![CDATA[<entitySize unit="bytes">13</entitySize>]]></doc:example>
                    <doc:lineage>
                    The entitySize was introduced into EML 1.4.
                  </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="unit" use="optional" default="bytes">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                            Unit of measurement
                          </doc:tooltip>
                            <doc:summary>
                            Unit of measurement for the entity size, typically bytes
                          </doc:summary>
                            <doc:description>
                            This element gives the unit of measurement for the
                            size of the entity, and is typically bytes.
                          </doc:description>
                            <doc:example><![CDATA[<entitySize unit="bytes">13</entitySize>]]></doc:example>
                            <doc:lineage>
                            The unit was introduced into EML 1.4.
                          </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="authentication" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                    Authentication method
                  </doc:tooltip>
                    <doc:summary>
                    A value, typically a checksum, used to authenticate that the bitstream
                    delivered to the user is identical to the original.
                  </doc:summary>
                    <doc:description>
                    This element describes authentication procedures or
                    techniques, typically by giving a checksum method (e.g., MD5) and
                    checksum value for the bytestream.
                  </doc:description>
                    <doc:example><![CDATA[
                    <authentication method="MD5">f5b2177ea03aea73de12da81f896fe40</authentication>
                  ]]></doc:example>
                    <doc:lineage>
                    The authentication element was introduced into EML 1.4.
                  </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="method" type="xs:string" use="optional">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                            Authentication method
                          </doc:tooltip>
                            <doc:summary>
                            The method used to calculate an authentication checksum.
                          </doc:summary>
                            <doc:description>
                            This element names the method used to calculate and
                            authentication checksum that can be used to validate a
                            bytestream.  Typical checksum methods include MD5 and CRC.
                          </doc:description>
                            <doc:example><![CDATA[
                            <authentication method="MD5">f5b2177ea03aea73de12da81f896fe40</authentication>
                          ]]></doc:example>
                            <doc:lineage>
                            The authentication element was introduced into EML 1.4.
                          </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:attribute>
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
              <xs:element name="compressionMethod" type="xs:string" minOccurs="0">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                    Entity's compression method
                  </doc:tooltip>
                    <doc:summary>
                    Name ofthe entity's compression method
                  </doc:summary>
                    <doc:description>
                    This element describes any compression methods used to
                    compress the entity, such as zip, compress, etc.
                  </doc:description>
                    <doc:example/>
                    <doc:lineage>
                    The compressed element was introduced into EML 1.4.
                  </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element name="encodingMethod" type="xs:string" minOccurs="0">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                    Encoding Method
                  </doc:tooltip>
                    <doc:summary>
                    Method used for encoding the entity
                  </doc:summary>
                    <doc:description>
                    This element describes the entity's encoded method, such as
                    MIME base64 encoding or binhex encoding.
                  </doc:description>
                    <doc:example/>
                    <doc:lineage>
                    The encoded element was introduced into EML 1.4.
                  </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
              <xs:element name="characterEncoding" type="xs:string" minOccurs="0">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                    Character Encoding
                  </doc:tooltip>
                    <doc:summary>
                    Contains the name of the chracter encoding used for the data.
                  </doc:summary>
                    <doc:description>
                    This element contains the name of the character encoding.
                    This is typically ASCII or UTF-8, or one of the other common encodings.
                  </doc:description>
                    <doc:example><![CDATA[<characterEncoding>UTF-8</characterEncoding>]]></doc:example>
                    <doc:lineage>
                    Introduced in EML 2.0
                  </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="dataFormat">
          <xs:annotation>
            <xs:appinfo>
              <doc:tooltip>
              File format
            </doc:tooltip>
              <doc:summary>
              Contains the name of the format for this file.
            </doc:summary>
              <doc:description>
              This element contains the name of the file's format.
              The file's format is typically ASCII, Unicode, or some
              well-known binary format (e.g., Microsoft Excel 2000).
              It is recommended to include a
              complete MIME type here, such as image/jpeg or text/xml.  Note
              that this is the format of the physical file itself.
            </doc:description>
              <doc:example><![CDATA[<format>ASCII</format>]]></doc:example>
              <doc:lineage>
              The format element was introduced into EML 1.4.
            </doc:lineage>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:sequence>
              <xs:annotation>
                <xs:appinfo>
                  <doc:tooltip>
                    Generic binary format
                  </doc:tooltip>
                  <doc:summary>
                    Generic binary format
                  </doc:summary>
                  <doc:description>
                    Documentation for a generic binary format
                  </doc:description>
                  <doc:example/>
                  <doc:lineage>
                    Introduced in EML 2.0.
                  </doc:lineage>
                </xs:appinfo>
              </xs:annotation>
              <xs:element name="formatType">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="formatName" type="xs:string" minOccurs="0"/>
                    <xs:element name="formatVersion" type="xs:string" minOccurs="0"/>
                    <xs:element ref="lit:citation" minOccurs="0"/>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:choice>
                <xs:element name="asciiDelimited" minOccurs="0">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="fieldDelimiter" type="xs:string">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Attribute delimiter
                        </doc:tooltip>
                            <doc:summary>
                          The end of the attribute (field) is delimited by a
                          special character called a field delimiter.
                        </doc:summary>
                            <doc:description>
                          Variable width format fields (attributes) can vary in their
                          field length, thus the end of the field is
                          delimited by a special character called a
                          field delimiter (typically a comma or a space).
                          Data sets are generally classified as fixedWidth
                          format or variableWidth format, but we have
                          determined that this is actually a per-field
                          classification because one may encounter
                          fixedWidth fields mixed together in the same
                          data file with variableWidth fields.
                          In our encoding scheme, the start of each field
                          is assumed to be the column after the last column
                          of the previous field, or the first column
                          if this is the first field in the dataset, unless
                          the starting column is explicity enumerated using the
                          "fieldStartColumn" element.
                          The end column for each field is classified
                          using either a special character delimeter indicated
                          using the filedDelimiter element,
                          or a fixed field length indicated by using the "fieldWidth"
                          element.  The delimiter for the last field in the data set can be omitted.
                          variableWidth fields can vary in their field length, and the end of
                          the field is delimited by a special character
                          called a field delimiter, usually a comma or
                          a tab character.  fixedWidth fields have a set
                          length, and so the end of the field can always
                          be determined by adding the fieldWidth to the
                          starting column number.  Here is an example:
                          Assume we have the following data in a data set:
                          May,100aaaa,1.2,
                          April,200aaaa,3.4,
                          June,300bbbb,4.6,
                          The metadata indicating the physical layout of the 4 fields would include the
                          following:
                          <![CDATA[
                          <delimiter>,</delimiter>
                          <fieldWidth>3</fieldWidth>
                          <fieldWidth>3</fieldWidth>
                          <delimiter>,</delimiter>
                          ]]>
                          In a strictly fixed format file, the metadata would be slightly different:
                          May100aaaa1.2
                          Apr200aaaa3.4
                          Jun300bbbb4.6
                          <![CDATA[
                            <fieldWidth>3</fieldWidth>
                            <fieldWidth>3</fieldWidth>
                            <fieldWidth>4</fieldWidth>
                            <fieldWidth>3</fieldWidth>
                          ]]>
                          or, one could explicitly describe the starting columns:
                          <![CDATA[
                            <fieldStartColumn>1</fieldStartColumn>
                            <fieldWidth>3</fieldWidth>
                            <fieldStartColumn>4</fieldStartColumn>
                            <fieldWidth>3</fieldWidth>
                            <fieldStartColumn>7</fieldStartColumn>
                            <fieldWidth>4</fieldWidth>
                            <fieldStartColumn>11</fieldStartColumn>
                            <fieldWidth>3</fieldWidth>
                          ]]></doc:description>
                            <doc:example>
                          comma, tab, white space, etc.
                        </doc:example>
                            <doc:lineage>
                          The delimiter element was introduced into
                          EML 1.4. Semantics changed to work identically to
                          the NBII DTD, and then modified to fit more cases.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="numHeaderLines" type="xs:string" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Header lines
                        </doc:tooltip>
                            <doc:summary>
                          Header lines in the entity
                        </doc:summary>
                            <doc:description>
                          Number of header lines or information that prepares data.
                        </doc:description>
                            <doc:example><![CDATA[<numHeaderLines>3</numHeaderLines>]]></doc:example>
                            <doc:lineage>
                          The numHeaderLines element was introduced into EML 1.4.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="maxRecordLength" type="xs:string" minOccurs="0"/>
                      <xs:element name="quoteCharacter" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Quote character
                        </doc:tooltip>
                            <doc:summary>
                          Character used to quote values for delimeter escaping
                        </doc:summary>
                            <doc:description>
                          This element specifies a character to be used in the entity
                          for quoting values so that field delimeters can be used within
                          the value.  This basically allows delimeter "escaping".  The
                          quoteChacter is typically a " or '.
                        </doc:description>
                            <doc:example><![CDATA[<quoteCharacter>"</quoteCharacter>]]></doc:example>
                            <doc:lineage>
                          The quoteCharacter element was taken from the NBII standard.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="recordDelimiter" type="xs:string" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Record delimiter character
                        </doc:tooltip>
                            <doc:summary>
                          Character used to delimit records.
                        </doc:summary>
                            <doc:description>
                          This element specifies the record delimiter character
                            when the format is text. The record delimiter is usually a
                            newline (\n) on UNIX, a carriage return (\r) on MacOS, or
                            both (\r\n) on Windows/DOS.  Multiline records are usually
                            delimited with two line ending characters, for example on UNIX
                            it would be two newline characters (\n\n).
                          </doc:description>
                            <doc:example><![CDATA[<recordDelimiter>\n\r</recordDelimiter>]]></doc:example>
                            <doc:lineage>
                          The recordDelimiter element was introduced into EML 1.4.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:element name="literalCharacter" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Literal character
                        </doc:tooltip>
                            <doc:summary>
                          Character used to escape other characters
                        </doc:summary>
                            <doc:description>
                          This element specifies a character to be used for escaping
                          character values so that the following character is treated as its literal
                          value.  This allows "escaping" for special characters like quotes, commas,
                          and spaces when they aren't intended as a delimiter value.  The
                          literalChacter is typically a \.
                        </doc:description>
                            <doc:example><![CDATA[<literalCharacter>\</literalCharacter>]]></doc:example>
                            <doc:lineage>
                          Introduced in EML 2.0.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="asciiFixed" minOccurs="0">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="numHeaderLines" type="xs:string" minOccurs="0"/>
                      <xs:element name="fieldStartColumn" type="xs:string" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>
                          Start column
                        </doc:tooltip>
                            <doc:summary>
                          The starting column number for a fixed format attribute.
                        </doc:summary>
                            <doc:description>
                          FixedWidth fields have a set length, thus
                          the end of the field can always be determined
                          by adding the fieldWidth to the starting
                          column number.
                        </doc:description>
                            <doc:example>
                          any positive integer, see example in "delimeter" description
                        </doc:example>
                            <doc:lineage>
                          Introduced into EML 2.0.
                        </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                      </xs:element>
                      <xs:choice maxOccurs="unbounded">
                        <xs:element name="fieldWidth" type="xs:string">
                          <xs:annotation>
                            <xs:appinfo>
                              <doc:tooltip>
                            Field width
                          </doc:tooltip>
                              <doc:summary>
                            FieldWidth specification for fixed field length.
                          </doc:summary>
                              <doc:description>
                            FixedWidth fields have a set length, thus
                            the end of the field can always be determined
                            by adding the fieldWidth to the starting
                            column number.
                          </doc:description>
                              <doc:example>
                            any positive integer, see example in "delimeter"
                            description
                          </doc:example>
                              <doc:lineage>
                            The fieldWidth element was introduced into
                            EML 1.4. Semantics changed to work identically to
                            the NBII DTD.
                          </doc:lineage>
                            </xs:appinfo>
                          </xs:annotation>
                        </xs:element>
                      </xs:choice>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="binaryRasterInfo" minOccurs="0">
                  <xs:annotation>
                    <xs:appinfo>
                      <doc:tooltip>
                     raster image parameters
                  </doc:tooltip>
                      <doc:summary>
                     contains binary raster data header parameters
                  </doc:summary>
                      <doc:description>
                    The binaryRasterInfo element is a container for various
                    parameters used to described the contents of binary raster
                    image files. In this case, it is based on a white paper on
                    the ESRI site that describes the header information used
                    for BIP and BIL files ("Extendable Image Formats for
                    ArcView GIS 3.1 and 3.2").
                  </doc:description>
                      <doc:example/>
                      <doc:lineage>
                    Introduced in EML 2.0.
                  </doc:lineage>
                    </xs:appinfo>
                  </xs:annotation>
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="nrows" type="xs:int">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of rows in the image. Rows are parallel to the x-axis of the
                              map coordinate system. There is no default.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                            Introduced in EML 2.0.
                          </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
          </xs:element>
                      <xs:element name="ncols" type="xs:int">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of columns in the image. Columns are parallel to the y-axis
                              of the map coordinate system. There is no default.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                            Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
          </xs:element>
                      <xs:element name="orientation" nillable="true" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip>Entity's record orientation</doc:tooltip>
                            <doc:summary>Specification of the binary raster entity's record
                            orientation.</doc:summary>
                            <doc:description>This element contains specification of the
                            binary raster entity's record orientation by defining the element's
          attribute "columnorrow". The binary raster will be
          column major if the raster is to be displayed column
          by column from the byte stream, or row major if it
          is to be displayed row by row from the byte stream.
          </doc:description>
                            <doc:example>The valid attribute values are "columnmajor" or
                            "rowmajor". If the attribute is not specified, "columnmajor" is
                            used.</doc:example>
                            <doc:lineage>The orientation element was introduced into EML
                            2.0</doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
                        <xs:complexType>
                          <xs:attribute name="columnOrRow" use="optional"
                          default="columnMajor">
                            <xs:annotation>
                              <xs:appinfo>
                                <doc:tooltip>Attribute of orientation element</doc:tooltip>
                                <doc:summary>Specification of the entity's record
                                orientation.</doc:summary>
                                <doc:description>This attribute specifies the entity's
                                record orientation.</doc:description>
                                <doc:example>The valid attribute values are "columnmajor"
                                or "rowmajor". If the attribute is not specified,
                                "columnmajor" is used.</doc:example>
                                <doc:lineage>The columnorrow attribute was introduced into
                                EML 1.4.</doc:lineage>
                              </xs:appinfo>
                            </xs:annotation>
                            <xs:simpleType>
                              <xs:restriction base="xs:string">
                                <xs:enumeration value="columnMajor" />
                                <xs:enumeration value="rowMajor" />
                              </xs:restriction>
                            </xs:simpleType>
                          </xs:attribute>
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="nbands" type="xs:int" minOccurs="0">
                        <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip/>
                          <doc:summary/>
                          <doc:description>
                          The number of spectral bands in the image. The default is 1.
                        </doc:description>
                          <doc:example/>
                          <doc:lineage>
                          Introduced in EML 2.0.
                        </doc:lineage>
                        </xs:appinfo>
                        </xs:annotation>
          </xs:element>
                      <xs:element name="nbits" type="xs:int" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of bits per pixel per band. Acceptable values are
                              1, 4, 8, 16, and 32. The default value is eight bits per pixel
                              per band. For a true color image with three bands (R, G, B)
                              stored using eight bits for each pixel in each band, nbits
                              equals eight and nbands equals three, for a total of twenty-four
                              bits per pixel. For an image with nbits equal to one, nbands
                              must also equal one.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
          </xs:element>
                      <xs:element name="byteorder" type="xs:string" minOccurs="0">
                        <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The byte order in which image pixel values are stored. The byte
                              order is important for sixteen-bit images, with two bytes per
                              pixel. Acceptable values are
                              I - Intel byte order (Silicon Graphics, DEC Alpha, PC)
                              Also known as littleendian.
                              M - Motorola byte order (Sun, HP, etc.)
                              Also known as big-endian.
                              The default byte order is the same as that of the host machine
                              executing the software.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
                        </xs:annotation>
          </xs:element>
                      <xs:element name="layout" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The organization of the bands in the image file. Acceptable
                              values are bil - Band interleaved by line.
                                   bip - Band interleaved by pixel.
                                   bsq - Band sequential.
                              The default layout is bil.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="skipbytes" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of bytes of data in the image file to skip
                              in order to reach the start of the image data. This
                              keyword allows you to bypass any existing image header
                              information in the file. The default value is zero bytes.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="ulxmap" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The y-axis map coordinate of the center of the
                              upper-left pixel. If this parameter is specified,
                              ulxmap must also be set, otherwise a default value
                              is used.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="ulymap" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The x-axis map coordinate of the center of the upper-left
                              pixel. If you specify this parameter, set ulymap, too,
                              otherwise a default value is used.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="xdim" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                          <doc:tooltip/>
                          <doc:summary/>
                          <doc:description>
                            The y-dimension of a pixel in map units.
                            If this parameter is specified, xdim must
                            also be set, otherwise a default value is used.
                          </doc:description>
                          <doc:example/>
                          <doc:lineage>
                            Introduced in EML 2.0.
                          </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="ydim" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The x-dimension of a pixel in map units.
                              If this parameter is specified,
                              ydim must also be set, otherwise a default
                              value is used.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="bandrowbytes" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of bytes per band per row. This must
                              be an integer. This keyword is used only with BIL
                              files when there are extra bits at the end of
                              each band within a row that must be skipped.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="totalrowbytes" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The total number of bytes of data per row.
                              Use totalrowbytes when there are extra trailing
                              bits at the end of each row.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                      <xs:element name="bandgapbytes" type="xs:string" minOccurs="0">
      <xs:annotation>
                          <xs:appinfo>
                            <doc:tooltip/>
                            <doc:summary/>
                            <doc:description>
                              The number of bytes between bands in a BSQ format
                              image. The default is zero.
                            </doc:description>
                            <doc:example/>
                            <doc:lineage>
                              Introduced in EML 2.0.
                            </doc:lineage>
                          </xs:appinfo>
      </xs:annotation>
          </xs:element>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="genericBinary" minOccurs="0"/>
              </xs:choice>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="distribution" minOccurs="0" maxOccurs="unbounded">
          <xs:annotation>
            <xs:appinfo>
              <doc:tooltip>Distribution Information
          </doc:tooltip>
              <doc:summary>
            Information on how the resource is distributed online and offline
          </doc:summary>
              <doc:description>
            This element provides information on how the resource is
            distributed online and offline.  Connections to online
            systems can be described as URLs and as a list of relevant
            connection parameters.
          </doc:description>
              <doc:example/>
              <doc:lineage>
            Derived from distribution elements in the FGDC standard.
          </doc:lineage>
            </xs:appinfo>
          </xs:annotation>
          <xs:complexType>
            <xs:choice maxOccurs="unbounded">
              <xs:element name="online">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>Connection Information
                </doc:tooltip>
                    <doc:summary>
                  Connection information for accessing the resource online
                </doc:summary>
                    <doc:description>
                  Connection information for accessing the resource online,
                  represented either as a URL or as a series of named
                  parameters that are needed in order to connect.
                </doc:description>
                    <doc:example/>
                    <doc:lineage/>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="url" type="xs:string">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                          Download site URL
                        </doc:tooltip>
                          <doc:summary>
                         A URL (Uniform Resource Locator) from which this resource can be downloaded
                        </doc:summary>
                          <doc:description>
                          A URL (Uniform Resource Locator) from which this resource can be downloaded.
                          This includes any information needed to access this site, such as
                          connection information.
                        </doc:description>
                          <doc:example>http://data.org/getdata?id=98332</doc:example>
                          <doc:lineage>
                          ISO CD 19115.3, Geographic information - Metadata
                        </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="connectionNotes" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>Parameter Value
                        </doc:tooltip>
                          <doc:summary>
                          A value of one of the parameters needed to
                          connect using this connection.
                        </doc:summary>
                          <doc:description>
                          A value of one of the parameters needed to
                          connect using this connection.  In general, if a URL
                          scheme exists for this type of connection, it
                          is much better to provide this information in
                          onlineURL rather than here.  Examples include
                          parameters such as host names and ports, paths,
                          UNC names, CGI parameters, etc.
                        </doc:description>
                          <doc:example><![CDATA[<parameter name="port">8081</parameter>parameter>]]></doc:example>
                          <doc:lineage>
                          New in EML 2.0.0
                        </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string"/>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="offline">
                <xs:annotation>
                  <xs:appinfo>
                    <doc:tooltip>
                  medium of the resource
                </doc:tooltip>
                    <doc:summary>
                  the medium on which this resource is distributed, either digitally or as hardcopy
                </doc:summary>
                    <doc:description>
                  the medium on which this resource is distributed digitally, such as 3.5"
                  floppy disk, or various tape media types, or 'hardcopy'
                </doc:description>
                    <doc:example>
                  CD-ROM, 3.5 in. floppy disk, Zip disk
                </doc:example>
                    <doc:lineage>
                  ISO CD 19115.3, Geographic information - Metadata
                </doc:lineage>
                  </xs:appinfo>
                </xs:annotation>
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="mediumName" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        Medium name
                      </doc:tooltip>
                          <doc:summary>
                        Name of the medium that for this resource distribution
                      </doc:summary>
                          <doc:description>
                        Name of the medium on which this resource is distributed.
                        Can be various digital media such as tapes and disks, or
                        printed media which can collectively be termed 'hardcopy'.
                      </doc:description>
                          <doc:example>
                        Tape, 3.5 inch Floppy Disk, hardcopy
                      </doc:example>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="mediumDensity" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        density of the digital medium
                      </doc:tooltip>
                          <doc:summary>
                        the density of the digital medium if this is
                        relevant.
                      </doc:summary>
                          <doc:description>
                        the density of the digital medium if this is
                        relevant.  Used mainly for floppy disks
                        or tape.
                      </doc:description>
                          <doc:example>
                        High Density (HD), Double Density (DD)
                      </doc:example>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="mediumDensityUnits" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        units of a numerical density
                      </doc:tooltip>
                          <doc:summary>
                        a numerical density's units
                      </doc:summary>
                          <doc:description>
                        if a density is given numerically, the units
                        should be given here.
                      </doc:description>
                          <doc:example>
                        B/cm
                      </doc:example>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="mediumVolume" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        storage volume
                      </doc:tooltip>
                          <doc:summary>
                        total volume of the storage medium
                      </doc:summary>
                          <doc:description>
                        the total volume of the storage medium on
                        which this resource is shipped.
                      </doc:description>
                          <doc:example>
                        650 MB
                      </doc:example>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="mediumFormat" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        medium format
                      </doc:tooltip>
                          <doc:summary>
                        format of the medium on which the resource is
                        shipped.
                      </doc:summary>
                          <doc:description>
                        the file system format of the medium on
                        which the resource is shipped
                      </doc:description>
                          <doc:example>
                        NTFS, FAT32, EXT2, QIK80
                      </doc:example>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                    <xs:element name="mediumNote" type="xs:string" minOccurs="0">
                      <xs:annotation>
                        <xs:appinfo>
                          <doc:tooltip>
                        note about the media
                      </doc:tooltip>
                          <doc:summary>
                        note about the media
                      </doc:summary>
                          <doc:description>
                        any additional pertitant information about the
                        media
                      </doc:description>
                          <doc:example/>
                          <doc:lineage>
                        ISO CD 19115.3,
                        Geographic information - Metadata
                      </doc:lineage>
                        </xs:appinfo>
                      </xs:annotation>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
              <xs:element name="inline" type="xs:string"/>
            </xs:choice>
          </xs:complexType>
        </xs:element>
      </xs:sequence>
      <xs:element name="references" type="xs:string"/>
    </xs:choice>
    <xs:attribute name="id" type="xs:ID" use="optional"/>
    <xs:attribute name="system" type="xs:string" use="optional"/>
    <xs:attribute name="scope" type="res:ScopeType" use="optional" default="document"/>
  </xs:complexType>
</xs:schema>
