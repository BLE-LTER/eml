<?xml version ="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="eml:entity">

  <xs:annotation>
    <xs:documentation>
       '$RCSfile: eml-quality.xsd,v $'
       Copyright: 2000 Regents of the University of California and the
                  National Center for Ecological Analysis and Synthesis
     For Details: http://knb.ecoinformatics.org/
  
        '$Author: berkley $'
          '$Date: 2001-04-03 21:51:45 $'
      '$Revision: 1.1 $'
    
    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
  
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
  
    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
    </xs:documentation>
    <xs:appinfo>
      <moduleName>
        eml-quality
      </moduleName>
      <moduleDescription>
        The EML Quality Module is used to identify the proccesses that have been
	used to define / improve the quality of a data file, also used to
	identify potential problems with the data file.
      </moduleDescription>
    </xs:appinfo>
  </xs:annotation>

<xs:element name="eml-quality">
<xs:complexType>
<xs:sequence>
	<xs:element name = "identifier" type = "xs:string"
                    minOccurs="1" maxOccurs="unbounded">
          <xs:complexType>
            <xs:attribute name="system" use="optional" type="xs:string">         
            </xs:attribute>
          </xs:complexType>
        </xs:element>
    
	<xs:element name="step" 
		minOccurs="1" maxOccurs="1">
		
	    <xs:annotation>
            <xs:appinfo>
              <tooltip> </tooltip>
              <summary> </summary>
              <description>Step defines the quality control / assurance procedures 
	      that were applied to the corresponding data file.  For example, 
	      a shell-script that 'greps' for an alpha-character within a 
	      datafile that is supposed to contain only numeric characters
	      </description>
              <example> </example>
              <lineage> </lineage>
            </xs:appinfo>
          </xs:annotation>
		
	 <xs:complexType>
    	  <xs:sequence>
   
      		<xs:element name="purpose" type="paragraph"
			minOccurs="1" maxOccurs="unbounded">
			
	    <xs:annotation>
            <xs:appinfo>
              <tooltip> </tooltip>
              <summary> </summary>
              <description> This refers to the purpose in applying the quality
	      control or quality assurance process to the data file. 
	      </description>
              <example> </example>
              <lineage> </lineage>
            </xs:appinfo>
          </xs:annotation>
		</xs:element>
      		<xs:element name="action" type="paragraph"
			minOccurs="1" maxOccurs="unbounded">
		</xs:element>
		<xs:element name="outcome" type="paragraph"
			minOccurs="1" maxOccurs="unbounded">
		</xs:element>
		<xs:element name="appliedAttribute" type="paragraph"
			minOccurs="0" maxOccurs="unbounded">
		</xs:element>
      		<xs:element name="contact" type="rp:responsibleParty"
			minOccurs="0" maxOccurs="unbounded">
		</xs:element>
      
    	</xs:sequence>
   	</xs:complexType>
  	</xs:element>
      
  <xs:element name="knownProblems" type="paragraph"
                    minOccurs="0" maxOccurs="unbounded">
  	</xs:element>
  
  <xs:element name="qualityCode" type=""
                    minOccurs="0" maxOccurs="unbounded">
   	<xs:attribute name="codeSystem" use="optional" type="xs:string">
   	<xs:complexType>
     	<xs:sequence>
     		
      		<xs:element name="description" type="paragraph"
			minOccurs="0" maxOccurs="1">
		</xs:element>
      		<xs:element name="code" type="paragraph"
			minOccurs="0" maxOccurs="unbounded">
		</xs:element>
    </xs:sequence>
   </xs:complexType>
  </xs:element>
      
       
</xs:sequence>
</xs:complexType>
</xs:element>
      
</xs:schema>
